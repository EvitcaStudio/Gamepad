/**
 * logger@1.0.0 https://github.com/EvitcaStudio/Logger
 * Compiled 1/9/2024, 9:29:22 AM UTC
 * 
 * logger is licensed under a MIT styled License. See LICENSE.md for more info.
 * 
 * Copyright 2024, Evitca Studio, All Rights Reserved
 */
 var t={d:(s,e)=>{for(var i in e)t.o(e,i)&&!t.o(s,i)&&Object.defineProperty(s,i,{enumerable:!0,get:e[i]})},o:(t,s)=>Object.prototype.hasOwnProperty.call(t,s)},s={};t.d(s,{Y:()=>e});class e{constructor(t){this.RESET="[0m",this.BRIGHT="[1m",this.DIM="[2m",this.UNDERSCORE="[4m",this.BLINK="[5m",this.REVERSE="[7m",this.HIDDEN="[8m",this.FG_BLACK="[30m",this.FG_RED="[31m",this.FG_GREEN="[32m",this.FG_YELLOW="[33m",this.FG_BLUE="[34m",this.FG_MAGENTA="[35m",this.FG_CYAN="[36m",this.FG_WHITE="[37m",this.FG_GRAY="[90m",this.BG_BLACK="[40m",this.BG_RED="[41m",this.BG_GREEN="[42m",this.BG_YELLOW="[43m",this.BG_BLUE="[44m",this.BG_MAGENTA="[45m",this.BG_CYAN="[46m",this.BG_WHITE="[47m",this.BG_GRAY="[100m",this.TYPE_SPACER_LENGTH=13,this.types={default:this.FG_WHITE},this.currentType="",this.SPACE_CHAR=" ",this.FG_COLORS={};for(let t=0;t<=255;t++)this.FG_COLORS[t]="[38;5;"+t+"m";this.BG_COLORS={};for(let t=0;t<=255;t++)this.BG_COLORS[t]="[48;5;"+t+"m";Array.isArray(t)&&this.registerTypes(t)}prefix(t){return"string"==typeof t&&(this.currentType=t),this}message(s="log",...e){var i=this.currentType||"";if(0===i.length)console[s](...e);else{var r=i.length>=this.TYPE_SPACER_LENGTH;let t=this.types[i.toLowerCase()]?this.types[i.toLowerCase()]:this.types.default;var h=t.includes("");h||(t="color: "+t),!globalThis.window||h?console[s](t+i+this.SPACE_CHAR.repeat(Math.max(this.TYPE_SPACER_LENGTH-i.length,r?1:0))+"|"+this.RESET,...e):console[s]("%c"+i+this.SPACE_CHAR.repeat(Math.max(this.TYPE_SPACER_LENGTH-i.length,r?1:0))+"|",t,...e)}this.currentType=""}log(...t){this.message("log",...t)}info(...t){this.message("info",...t)}error(...t){this.message("error",...t)}warn(...t){this.message("warn",...t)}assert(...t){console.assert(...t)}debug(...t){this.message("debug",...t)}count(t){console.count(t)}countReset(t){console.countReset(t)}table(t,s){console.table(t,s)}time(t){this.message("time",t)}timeLog(t){this.message("timeLog",t)}timeEnd(t){this.message("timeEnd",t)}trace(...t){this.message("trace",...t)}group(t){this.message("group",t)}groupCollapsed(t){console.groupCollapsed(t)}groupEnd(){console.groupEnd()}clear(){console.clear()}registerType(t,s){this.types[t]||"string"==typeof t&&"string"==typeof s&&(this.types[t.toLowerCase()]=s)}registerTypes(s){if(Array.isArray(s))for(let t=0;t<s.length;t++)this.registerType(s[t].type,s[t].ansi)}unregisterType(t){this.types[t]&&delete this.types[t]}}var i=s.Y;export{i as Logger};